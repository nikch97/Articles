{"version":3,"sources":["logo.svg","_component/UserFunctions.js","_component/Login.js","_component/Register.js","_component/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","register","newUser","axios","post","name","family","mobile","username","password","gender","then","res","console","log","style","backgroundImage","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onChange","bind","assertThisInitialized","onSubmit","e","setState","defineProperty","target","value","_this2","preventDefault","user","localStorage","setItem","data","catch","err","login","props","history","push","react_default","a","createElement","className","noValidate","data-validate","type","placeholder","Link","to","Component","Register","avatar","_ref","_ref$target","checked","id","Profile","token","userToken","decoded","jwt_decode","App","BrowserRouter","basename","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.990f1900.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import axios from \"axios\";\r\n\r\nexport const register = newUser => {\r\n    return axios\r\n        .post('users/register', {\r\n            name: newUser.name,\r\n            family: newUser.family,\r\n            mobile: newUser.mobile,\r\n            username: newUser.username,\r\n            password: newUser.password,\r\n            gender: newUser.gender\r\n            // avatar: 'images/users/' + FILE.originalname,\r\n        })\r\n        .then(res => {\r\n            console.log('Registered!')\r\n        })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n        .post('/users/login', {\r\n\r\n            username: user.username,\r\n            password: user.password\r\n\r\n        })\r\n        .then(res => {\r\n            localStorage.setItem('userToken', res.data)\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}","import React, { Component } from 'react'\r\nimport { login } from \"./UserFunctions\"\r\nimport {Link} from 'react-router-dom'\r\nimport Axios from 'axios';\r\n\r\nconst style = {\r\n    backgroundImage: 'url(./public/images/bg.jpg)'\r\n};\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n   \r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        }\r\n        // Axios.post('http://localhost:3000/users/login',user)\r\n        // .then(response=>{\r\n        //     if(response.user.success){\r\n        //         window.location = '/profile';\r\n        //     }else{\r\n        //         this.setState({error:true})\r\n        //     }\r\n        // })\r\n\r\n\r\n\r\n\r\n        login(user)\r\n            .then(res => {\r\n                if (res) {\r\n                    this.props.history.push(`/profile`)\r\n                    // console.log('Ok shod!')\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-login100\" style={style}>\r\n                <div className=\"wrap-login100 p-l-55 p-r-55 p-t-80 p-b-30\">\r\n                    <form noValidate onSubmit={this.onSubmit} className=\"login100-form validate-form\">\r\n                        <span className=\"login100-form-title p-b-37\">\r\n                            Sign In\r\n\t\t\t\t        </span>\r\n\r\n                        <div className=\"wrap-input100 validate-input m-b-20\" data-validate=\"Enter username\">\r\n                            <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n\r\n                        <div className=\"wrap-input100  m-b-25\" data-validate=\"Enter password\">\r\n                            <input className=\"input100\" type=\"password\" name=\"password\" placeholder=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChange}   \r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button className=\"login100-form-btn\" type=\"submit\">\r\n                                Sign In\r\n\t\t\t\t\t</button>\r\n                        </div>\r\n                       \r\n                        <div className=\"text-center\">\r\n                            <Link to=\"register\" className=\" txt2 hov1\">\r\n                                Sign Up\r\n\t\t\t\t\t        </Link>\r\n                        </div>\r\n                    </form>\r\n                    \r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\nimport { register } from \"./UserFunctions\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst style = {\r\n    backgroundImage: 'url(./images/bg.jpg)'\r\n};\r\nclass Register extends Component {\r\n    state = {\r\n        name: '',\r\n        family: '',\r\n        mobile: '',\r\n        username: '',\r\n        password: '',\r\n        gender: '',\r\n        avatar: ''\r\n    }\r\n\r\n    onChange = ({ target: { name, value, type, checked } }) => {\r\n        if (type === \"radio\") {\r\n            this.setState({ [name]: checked })\r\n        }\r\n        else {\r\n            this.setState({ [name]: value })\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            name: this.state.name,\r\n            family: this.state.family,\r\n            mobile: this.state.mobile,\r\n            gender: this.state.gender,\r\n            avatar: this.state.avatar\r\n        }\r\n\r\n        register(user)\r\n            .then(res => {\r\n\r\n                this.props.history.push(`/login`)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-login100\" style={style}>\r\n                <div className=\"wrap-reg-100  p-l-55 p-r-55 p-t-80 p-b-30\">\r\n                    <form onSubmit={this.onSubmit} className=\"login100-form validate-form\">\r\n                        <span className=\"login100-form-title p-b-37\">\r\n                            Sign Up\r\n                        </span>\r\n\r\n                        <div className=\"wrap-reg-input100 validate-input m-b-20\" data-validate=\"Enter username\">\r\n                            <input className=\"input100\" type=\"text\" name=\"name\" placeholder=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n\r\n                        <div className=\"wrap-reg-input100 validate-input m-b-20\" data-validate=\"Enter username\">\r\n                            <input className=\"input100\" type=\"text\" name=\"family\" placeholder=\"family\"\r\n                                value={this.state.family}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n\r\n                        <div className=\"wrap-reg-input100 validate-input m-b-20\" data-validate=\"Enter username\">\r\n                            <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n\r\n                        <div className=\"wrap-reg-input100 validate-input m-b-25\" data-validate=\"Enter password\">\r\n                            <input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"password\"\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n\r\n                        <div className=\"wrap-reg-input100  validate-input m-b-20\" data-validate=\"Enter username\">\r\n                            <input className=\"input100\" type=\"text\" name=\"mobile\" placeholder=\"mobile\"\r\n                                value={this.state.mobile}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n                        <div className=\"wrap-reg-input100 validate-input m-b-20 py-2 pr-1\" data-validate=\"Enter username\">\r\n                            <select className=\"form-control border-0\" name=\"gender\">\r\n                                <option value=\"female\">Female</option>\r\n                                <option value=\"male\">Male</option>\r\n                            </select>\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n                        <div className=\"validate-input \" data-validate=\"Enter username\">\r\n                            <span className=\"sp mx-5\">Choose an avatar: </span> <input type=\"file\" className=\"py-2\" name=\"avatar\" id=\"\"\r\n                                checked={this.state.avatar}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <span className=\"focus-input100\"></span>\r\n                        </div>\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button className=\"login100-form-btn my-4\" type=\"submit\" onSubmit={this.onSubmit}>\r\n                                Sign Up\r\n\t\t\t\t\t</button>\r\n                        </div>\r\n\r\n                        <div className=\"text-center\">\r\n                            <Link to=\"/\" className=\" txt2 hov1\">\r\n                                Sign In\r\n\t\t\t\t\t        </Link>\r\n                        </div>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nclass Profile extends Component{\r\n    state = {\r\n        name: '',\r\n        family: '',\r\n        mobile: '',\r\n        username: '',\r\n        password: '',\r\n        gender: '',\r\n        avatar: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        const token = localStorage.userToken\r\n        const decoded = jwt_decode(token)\r\n        this.setState({\r\n            name:decoded.name,\r\n            family:decoded.family,\r\n            mobile:decoded.mobile,\r\n            username:decoded.username,\r\n            password:decoded.password,\r\n            gender:decoded.gender,\r\n            avatar:decoded.avatar,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                welcome {this.state.name}\r\n            </div> \r\n        )        \r\n    }\r\n\r\n}\r\n\r\nexport default Profile\r\n   \r\n    \r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Login from './_component/Login';\r\nimport Register from './_component/Register';\r\nimport Profile from './_component/Profile';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Router basename=\"/panel\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/profile\" component={Profile} />\r\n        </Switch>    \r\n      </Router>\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './App.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}